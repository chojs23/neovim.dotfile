return {
  -- {
  --   "nvim-treesitter/nvim-treesitter-context",
  --   event = "LazyFile",
  --   enabled = true,
  --   opts = { mode = "cursor", max_lines = 3 },
  --   keys = {
  --     {
  --       "<leader>ut",
  --       function()
  --         local Util = require("lazyvim.util")
  --         local tsc = require("treesitter-context")
  --         tsc.toggle()
  --         if Util.inject.get_upvalue(tsc.toggle, "enabled") then
  --           Util.info("Enabled Treesitter Context", { title = "Option" })
  --         else
  --           Util.warn("Disabled Treesitter Context", { title = "Option" })
  --         end
  --       end,
  --       desc = "Toggle Treesitter Context",
  --     },
  --   },
  -- },
  -- {
  --   "nvim-treesitter/nvim-treesitter",
  --   dependencies = {
  --     {
  --       "nvim-treesitter/playground",
  --     },
  --     {
  --       "nvim-treesitter/nvim-treesitter-textobjects",
  --       config = function()
  --         -- When in diff mode, we want to use the default
  --         -- vim text objects c & C instead of the treesitter ones.
  --         local move = require("nvim-treesitter.textobjects.move") ---@type table<string,fun(...)>
  --         local configs = require("nvim-treesitter.configs")
  --         for name, fn in pairs(move) do
  --           if name:find("goto") == 1 then
  --             move[name] = function(q, ...)
  --               if vim.wo.diff then
  --                 local config = configs.get_module("textobjects.move")[name] ---@type table<string,string>
  --                 for key, query in pairs(config or {}) do
  --                   if q == query and key:find("[%]%[][cC]") then
  --                     vim.cmd("normal! " .. key)
  --                     return
  --                   end
  --                 end
  --               end
  --               return fn(q, ...)
  --             end
  --           end
  --         end
  --       end,
  --     },
  --   },
  --   build = ":TSUpdate",
  --   enabled = true,
  --   opts = function(_, opts)
  --     opts.rainbow = { max_file_lines = 2000 }
  --     opts.highlight = {
  --       enable = true,
  --       max_file_lines = 10000,
  --       disable = function(lang, bufnr)
  --         return vim.fn.getfsize(vim.api.nvim_buf_get_name(bufnr)) > 1048576
  --       end,
  --     }
  --     opts.indent = { enable = false }
  --     opts.incremental_selection = {
  --       enable = false,
  --       keymaps = {
  --         init_selection = "<C-space>",
  --         node_incremental = "<C-space>",
  --         scope_incremental = false,
  --         node_decremental = "<bs>",
  --       },
  --     }
  --     if type(opts.ensure_installed) == "table" then
  --       vim.list_extend(opts.ensure_installed, { "graphql" })
  --     end
  --   end,
  -- },
}
